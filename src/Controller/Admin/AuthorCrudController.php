<?php

namespace App\Controller\Admin;

use App\Entity\Author;
use Doctrine\ORM\EntityManagerInterface;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\AssociationField;
use EasyCorp\Bundle\EasyAdminBundle\Field\ChoiceField;
use EasyCorp\Bundle\EasyAdminBundle\Field\CollectionField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IdField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextEditorField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use JetBrains\PhpStorm\NoReturn;

class AuthorCrudController extends AbstractCrudController
{
    public static function getEntityFqcn(): string
    {
        return Author::class;
    }


    public function configureFields(string $pageName): iterable
    {

        if($pageName == "new" ){
            return [
                IdField::new('id')->hideOnForm(),
                TextField::new('firstName'),
                TextField::new("lastName"),
                ChoiceField::new('gender')->setChoices([
                    "Male" => "M",
                    "Female" => "F",
                    "Undefine" => "ø"
                ]),
                AssociationField::new("articles")->hideOnForm(),
            ];
        }elseif ( $pageName === Crud::PAGE_EDIT){
            return [
                IdField::new('id')->hideOnForm(),
                TextField::new('firstName'),
                TextField::new("lastName"),
                ChoiceField::new('gender')->setChoices([
                    "Male" => "M",
                    "Female" => "F",
                    "Undefine" => "ø"
                ]),
                AssociationField::new("articles")->setFormTypeOptions(["by_reference" => false]),
            ];
        } else{
            return [
                IdField::new('id')->hideOnForm(),
                TextField::new('firstName'),
                TextField::new("lastName"),
                ChoiceField::new('gender')->setChoices([
                    "Male" => "M",
                    "Female" => "F",
                    "Undefine" => "ø"
                ]),
                CollectionField::new("articles")->hideOnForm()->renderExpanded()->setEntryIsComplex(),
            ];
        }
    }

    public function persistEntity(EntityManagerInterface $em, $entityInstance): void
    {
//        Sert a afficher l'objet qui vient d'être crée

        dd($entityInstance);

//        permet d'utiliser la fonction déjà instanciée pour finaliser la requete
//        parent::persistEntity($em,$entityInstance);


//        parent::persistEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub
    }

}
